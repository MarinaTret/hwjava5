package ru.netology.services;

public class VacationService {
    public int calculate(int income, int expenses, int threshold) {
        int months = 0;
        int cash = 0;
        for (int i = 0; i < 12; i++) {
            if (cash >= threshold) {
                months++;
                cash -= expenses;
                cash /= 3; // cash = cash / 3;
            } else {
                cash += income;
                cash -= expenses;
            }
        }
        return months;
    }
}

/* Один фрилансер, воспользовавшись гибкостью графики своего вида работы,
решил смоделировать свой отдых по следующей схеме:

Изначально у него нет денег;
- если он решит, что в следующем месяце хочет активно работать,
то его деньги меняются на income, доходы от работы и уменьшаются на expense,
обязательные месячные траты;
- если он решит, что в следующем месяце захочет отдохнуть,
то за месяц его деньги уменьшатся на expense,
а затем остаток накоплений ещё в три раза — уйдет на отдых;

Решение: отдохнуть ли в следующем месяце, принимается по правилу:
если на счету есть бы threshold деньги, то выбираем хотя бы отдых, иначе — работу.
Вам нужно написать сервисный класс с методом,
который задан income, expenses и threshold рассчитать количество месяцев отдыха,
которые будут в следующем году. Всё считается в целых числах.
Сервисный класс должен быть в пакете ru.netology.services, как и тестовый класс на нем.

Например, если income10 тысяч руб., expenses3 тысячи руб., threshold20 тысяч руб.,
можно отдохнуть три месяца в году согласно следующей эмуляции Стандартного поведения:
А на источнике income100 тысяч руб., expenses60 тысяч руб., threshold150 тысяч руб. ответ будет 2:
 */